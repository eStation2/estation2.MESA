{
    /**
     * The application's namespace.
     */
    "name": "esapp",

    /**
     * Comma-separated string with the paths of directories or files to search. Any classes
     * declared in these locations will be available in your class "requires" or in calls
     * to "Ext.require". The "app.dir" variable below is expanded to the path where the
     * application resides (the same folder in which this file is located).
     */
    "classpath": "${app.dir}/app",

    /**
     * The Sencha Framework for this application: "ext" or "touch".
     */
    "framework": "ext",

    /**
     * The name of the theme for this application.
     */
    "theme": "ext-theme-neptune",
//    "theme": "ext-theme-crisp",
//     "theme": "ext-theme-gray",
//     "theme": "ext-theme-classic",
//     "theme": "ext-theme-aria",


    /**
     * The list of required packages (with optional versions; default is "latest").
     *
     * For example,
     *
     *      "requires": [
     *          "sencha-charts"
     *      ]
     */
    "requires": [
        "sencha-charts",
        "ext-ux"
//        ,"ext-ux-colorpick"
//        "ext-locale"
    ],

//    "locale": "fr",

    /**
     * Sass configuration properties.
     */
    "sass": {
        /**
         * The root namespace to use when mapping *.scss files to classes in the
         * sass/src and sass/var directories. For example, "esapp.view.Foo" would
         * map to "sass/src/view/Foo.scss". If we changed this to "esapp.view" then
         * it would map to "sass/src/Foo.scss". To style classes outside the app's
         * root namespace, change this to "". Doing so would change the mapping of
         * "esapp.view.Foo" to "sass/src/esapp/view/Foo.scss".
         */
        "namespace": "esapp"
    },

    /**
     * The file path to this application's front HTML document. This is relative
     * to this app.json file.
     */
    "indexHtmlPath": "index.html",

    /**
     * The absolute URL to this application in development environment, i.e: the URL to run
     * this application on your web browser, e.g: "http://localhost/esapp/index.html".
     *
     * This value is needed when build to resolve your application's dependencies if it
     * requires server-side resources. This setting is only used if you enable dynamic
     * resolution by setting "skip.resolve=0" (in .sencha/app/sencha.cfg) or if you
     * invoke "sencha app resolve".
     */
    "url": null,

    /**
     * List of all JavaScript assets in the right execution order.
     *
     * Each item is an object with the following format:
     *
     *      {
     *          // Path to file. If the file is local this must be a relative path from
     *          // this app.json file.
     *          //
     *          "path": "path/to/script.js",   // REQUIRED
     *
     *          // Set to true on one file to indicate that it should become the container
     *          // for the concatenated classes.
     *          //
     *          "bundle": false,    // OPTIONAL
     *
     *          // Set to true to include this file in the concatenated classes.
     *          //
     *          "includeInBundle": false,  // OPTIONAL
     *
     *          // Specify as true if this file is remote and should not be copied into the
     *          // build folder. Defaults to false for a local file which will be copied.
     *          //
     *          "remote": false,    // OPTIONAL
     *
     *          // If not specified, this file will only be loaded once, and cached inside
     *          // localStorage until this value is changed. You can specify:
     *          //
     *          //   - "delta" to enable over-the-air delta update for this file
     *          //   - "full" means full update will be made when this file changes
     *          //
     *          "update": "",        // OPTIONAL
     *
     *          // A value of true indicates that is a development mode only dependency.
     *          // These files will not be copied into the build directory or referenced
     *          // in the generate app.json manifest for the micro loader.
     *          //
     *          "bootstrap": false   // OPTIONAL
     *      }
     */
    "js": [
        {
            "path": "app.js",
            "bundle": true
        },{
            "path": "lib/js/OL3/build/ol.js",
            "remote": true
//        },{
//            "path": "lib/js/OL4.6.5/ol.js",
//            "remote": true
        },{
            "path": "lib/js/ol3-layerswitcher-master/src/ol3-layerswitcher.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/highstock.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/highcharts-more.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/modules/heatmap.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/modules/exporting.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/modules/offline-exporting.js",
            "remote": true
        },{
            "path": "lib/js/Highstock-5.0.14/code/modules/export-csv-1.1.4.js",
            "remote": true
        },{
            // This module, after the dependencies
            "path": "lib/js/Highstock-5.0.14/code/modules/highcharts-export-clientside-1.4.3.js",
            "remote": true
        },{
            "path": "lib/js/html2canvas-0.5.0-alpha1/dist/html2canvas.min.js",
            "remote": true
        },{
            "path": "lib/js/ResizeSensor.js",
            "remote": true

//        },{
//            "path": "app/CustomVTypes.js",
//            "includeInBundle": true
//        },{
//            "path": "lib/js/Highstock/js/highstock-all.js",
//            "remote": true
//        },{
//            "path": "lib/js/Highstock/js/modules/export-csv.js",
//            "remote": true
//        },{
//            // This module, after the dependencies
//            "path": "lib/js/Highstock/js/modules/highcharts-export-clientside.js",
//            "remote": true

        }],

//        },{
//            "path": "lib/js/es6-promise.min.js",
//            "remote": true
//        },{
//            "path": "lib/js/js-spark-md5-master/spark-md5.js",
//            "remote": true
//        },{
//            "path": "lib/js/Highstock/js/modules/jspdf.min.js",
//            "remote": true
//        },{
//            "path": "lib/js/md5.js",
//            "remote": true
//        },{
//            "path": "lib/js/dom-to-image-master/dist/dom-to-image.min.js",
//            "remote": true
//        },{
//            "path": "lib/js/Highstock/js/modules/canvas-tools.src.js",
//            "remote": true
//        },{
//            "path": "lib/js/canvg-master/rgbcolor.js",
//            "remote": true
//        },{
//            "path": "lib/js/canvg-master/StackBlur.js",
//            "remote": true
//        },{
//            "path": "lib/js/canvg-master/canvg.js",
//            "remote": true
//        },{
//            "path": "lib/js/Highcharts/js/highcharts.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/extjs-upload-widget-masterlib/upload/"
//            ,"remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/Ext.ux.form.FileUploadField.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/Ext.ux.XHRUpload.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/swfupload.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/swfupload.swfobject.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/Ext.ux.AwesomeUploaderLocalization.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/Ext.ux.AwesomeUploader.js",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/Ext.ux.StatusBar.js",
//            "remote": true
//        }
//        ,{
//            "path": "http://binoche:3000/inspector.js",
//            "remote": true,
//            "bootstrap": true
//        }




    /**
     * List of all CSS assets in the right inclusion order.
     *
     * Each item is an object with the following format:
     *
     *      {
     *          // Path to file. If the file is local this must be a relative path from
     *          // this app.json file.
     *          //
     *          "path": "path/to/stylesheet.css",   // REQUIRED
     *
     *          // Specify as true if this file is remote and should not be copied into the
     *          // build folder. Defaults to false for a local file which will be copied.
     *          //
     *          "remote": false,    // OPTIONAL
     *
     *          // If not specified, this file will only be loaded once, and cached inside
     *          // localStorage until this value is changed. You can specify:
     *          //
     *          //   - "delta" to enable over-the-air delta update for this file
     *          //   - "full" means full update will be made when this file changes
     *          //
     *          "update": ""      // OPTIONAL
     *      }
     */
    "css": [
            {
                "path": "bootstrap.css",
                "bootstrap": true
            },{
                "path": "resources/css/esapp.css",
                "update": "full"
            },{
                "path": "lib/js/OL3/css/ol.css",
                "remote": true
//            },{
//                "path": "lib/js/OL4.6.5/ol.css",
//                "remote": true
            },{
                "path": "lib/js/ol3-layerswitcher-master/src/ol3-layerswitcher.css",
                "remote": true
            },{
                "path": "resources/fonts/font-awesome-4.6.3/css/font-awesome.css"
            }
        ],

//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/Ext.ux.form.FileUploadField.css",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/AwesomeUploader.css",
//            "remote": true
//        },{
//            "path": "lib/js/Ext.ux/AwesomeUploader/AwesomeUploader Progress Bar.css",
//            "remote": true
//        },{
//            "path": "resources/fonts/icomoon/style.css"



    /**
     * Used to automatically generate cache.manifest (HTML 5 application cache manifest) file when you build
     */
    "appCache": {
        /**
         * List of items in the CACHE MANIFEST section
         */
        "cache": [
            "index.html"
        ],
        /**
         * List of items in the NETWORK section
         */
        "network": [
            "*"
        ],
        /**
         * List of items in the FALLBACK section
         */
        "fallback": []
    },

    /**
     * Extra resources to be copied along when build
     */
    "resources": [
    ],

    /**
     * File / directory name matchers to ignore when copying to the builds, must be valid regular expressions
     */
    "ignore": [
        "^\\.svn$",
        "^\\.git$",
        "^\\.old$"
    ],

    /**
     * Directory path to store all previous production builds. Note that the content generated inside this directory
     * must be kept intact for proper generation of deltas between updates
     */
    "archivePath": "archive",


    /**
     * Controls the name of the manifest file used by the microloader for
     * dev and build modes
     */
    "manifest": {
        "name": "app.json",
        "bootstrap": "bootstrap.json"
    },


    /**
     * Uniquely generated id for this application, used as prefix for localStorage keys.
     * Normally you should never change this value.
     */
    "id": "be5eaf97-9928-48cc-94c8-e0ddfd4f49fb"

    /**
     * Redirect build JS output into .js file, which has to be includes (with <source>) in the HTML
     * Add <script src="microloader.js"></script> in the esap template index.html,
     * which will still be overwritten on every build
     **/
    ,"output": {
        "base": "${workspace.build.dir}/${build.environment}/${app.name}",
        "microloader": {
            "path": "microloader.js",
            "embed": false,
            "enable": true
        }
    }


}
