#
#   References to python docs and online sources (examples, ...)
#

Linux packages (incl. apt-get, apt-cache)
-----------------------------------------

General description of apt-get: https://help.ubuntu.com/community/AptGet/Howto
All dependencies of a package: http://stackoverflow.com/questions/4627158/howto-list-all-dependencies-of-a-package-on-linux
OS installation Process: https://help.ubuntu.com/12.04/installation-guide/amd64/

Python Modules
--------------
Installing Python modules:
http://docs.python.org/2/install/ e.g. :

std. Installation:
python setup.py install -> goes to <prefix>/lib/pythonX.Y/site-packages
(sys.prefix='/Library/Frameworks/Python.framework/Versions/2.7' on my Mac)

User Installation:
python setup.py install --user -> goes to <userbase>/lib/pythonX.Y/site-packages
(site.USER_BASE='/Users/clerima/Library/Python/2.7' on my Mac)

How to check if a module has been in imported:
http://stackoverflow.com/questions/5027352/how-to-test-if-one-python-module-has-been-imported

Easy_install:
http://pythonhosted.org/setuptools/easy_install.html#downloading-and-installing-a-package
Pip:
http://www.pip-installer.org/en/latest/
And namely for GDAL:
http://trac.osgeo.org/gdal/wiki/GdalOgrInPython
http://stackoverflow.com/questions/11091623/python-packages-offline-installation

Virtualenv and virtualenvwrapper
----------------------------------
Tutorial: https://code.tutsplus.com/articles/python-power-tools-virtualenv--net-31560
Tutorial: https://code.tutsplus.com/articles/python-power-tools-virtualenvwrapper--net-31569
http://www.virtualenv.org/en/latest/virtualenv.html#making-environments-relocatable
http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html

GDAL-python reference:
----------------------
Reading 'grib' files (as MPE): http://www.gdal.org/frmt_grib.html
Dataset Class: http://gdal.org/python/osgeo.gdal.Dataset-class.html
GDAL Tutorial: http://www.gdal.org/gdal_tutorial.html
GDAL OGRSpatialReference Class def:  http://www.gdal.org/ogr/classOGRSpatialReference.html

Miscellaneous:
--------------
List of built-in Error Types:
http://docs.python.org/2/library/exceptions.html#bltin-exceptions

Definition of geoTransform:
http://geoexamples.blogspot.it/2012/01/creating-files-in-ogr-and-gdal-with.html

GDAL Metadata for GTiff
http://gis-lab.info/docs/gdal/gdal_ogr_user_docs.html#42_4

http://www.ruffus.org.uk/

Git:
----
a. take a deleted file from HEAD: git checkout HEAD^ <file_name>
   (HEAD is the latest-current commit)
---- 

G EarthEngine python API (on VM22) - https://sites.google.com/site/earthengineapidocs/python-api
------------------------------------------------------------------------------------------------

1. Install the Python packages:
sudo pip install google-api-python-client
sudo pip install earthengine-api

2. Create the authorization:
a. Install and open firefox -> log to my private gmail account
b. Run: /usr/bin/python /usr/local/lib/python2.7/dist-packages/ee/authenticate.py
c. Get the code in the browser an copy to command line
d. Get -> Successfully saved authorization to /home/esuser/.config/earthengine/credentials

Note: the GEE API Manager is accessible at: https://console.developers.google.com/apis/credentials?project=jrc-water-world-app

H Install Google Drive API on mesa-proc (for downloading GEE-WBD)
------------------------------------------------------------------------------------------------

1. Install the Python package:
pip install -U google-api-python-client

NOTE: possible issues to be solved:
1.a: the pip file is not synced with python version ->  'sudo vi /usr/local/src/tas/anaconda/bin/pip' and correct version to anaconda-2.7
1.b: the yum repo are not updated (copy from mesa-proc)
1.c: permissions of /usr/local/src/tas/anaconda/bin and /usr/local/src/tas/anaconda/lib/python2.7/site-packages/ not OK -> change to adminuser

2. Copy the credential file /home/adminuser/.credentials/drive-python-quickstart.json from a 'reference' machine.
2.a You can re-create the file as described in http://wescpy.blogspot.it/2014/09/simple-google-api-access-from-python.html under 'Google API access'

I Libraries for Sentinel data management
------------------------------------------------------------------------------------------------

https://github.com/sentinelsat/sentinelsat/blob/master/README.rst

I Sync code to home
rsync -av --delete --exclude=.git/ ./ /home/esuser/eStation2/src/